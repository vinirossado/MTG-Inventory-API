// <auto-generated />
using MTG_Inventory;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MTG_Inventory.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241209100704_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MTG_Inventory.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("CMC")
                        .HasColumnType("double precision");

                    b.Property<int?>("CardNumber")
                        .HasColumnType("integer");

                    b.Property<string>("ColorIdentity")
                        .HasColumnType("text");

                    b.Property<string>("Condition")
                        .HasColumnType("text");

                    b.Property<string>("ExpansionCode")
                        .HasColumnType("text");

                    b.Property<string>("ExpansionName")
                        .HasColumnType("text");

                    b.Property<bool?>("Foil")
                        .HasColumnType("boolean");

                    b.Property<string>("ImageUri")
                        .HasColumnType("text");

                    b.Property<int>("InUse")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsCommander")
                        .HasColumnType("boolean");

                    b.Property<string>("Language")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OracleId")
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Rarity")
                        .HasColumnType("text");

                    b.Property<string>("TypeLine")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("MTG_Inventory.Models.CardDeck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<int>("DeckId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("DeckId");

                    b.ToTable("CardDeck");
                });

            modelBuilder.Entity("MTG_Inventory.Models.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("PowerLevel")
                        .HasColumnType("smallint");

                    b.Property<string>("Strategy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Deck");
                });

            modelBuilder.Entity("MTG_Inventory.Models.CardDeck", b =>
                {
                    b.HasOne("MTG_Inventory.Models.Card", "Card")
                        .WithMany("CardDecks")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTG_Inventory.Models.Deck", "Deck")
                        .WithMany("CardDecks")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("MTG_Inventory.Models.Card", b =>
                {
                    b.Navigation("CardDecks");
                });

            modelBuilder.Entity("MTG_Inventory.Models.Deck", b =>
                {
                    b.Navigation("CardDecks");
                });
#pragma warning restore 612, 618
        }
    }
}
